jimmbot_controller:
  # Publish all joint states -----------------------------------
  jimmbot_joint_publisher:
    type: joint_state_controller/JointStateController
    publish_rate: 50

  # Position Controllers --------------------------------------
  jimmbot_velocity_controller:
    type: "diff_drive_controller/DiffDriveController"
    publish_rate: 50

    left_wheel: ['wheel_axis_front_left_to_wheel_front_left','wheel_axis_back_left_to_wheel_back_left']
    right_wheel: ['wheel_axis_front_right_to_wheel_front_right','wheel_axis_back_right_to_wheel_back_right']

    wheel_separation: 0.22
    wheel_radius: 0.08255

    # Odometry covariances for the encoder output of the robot. These values should
    # be tuned to your robot's sample odometry data, but these values are a good place
    # to start
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

    # Top level frame (link) of the robot description
    base_frame_id: base_link

    # Velocity and acceleration limits for the robot
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 10  # m/s
        has_acceleration_limits: true
        max_acceleration       : 3   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 10   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 3   # rad/s^2

# gazebo_ros_control/pid_gains:
#   wheel_axis_front_left_to_wheel_front_left: {p: 1.0, i: 0.0, d: 1.0}
#   wheel_axis_back_left_to_wheel_back_left: {p: 1.0, i: 0.0, d: 1.0}
#   wheel_axis_front_right_to_wheel_front_right: {p: 1.0, i: 0.0, d: 1.0}
#   wheel_axis_back_right_to_wheel_back_right: {p: 1.0, i: 0.0, d: 1.0}